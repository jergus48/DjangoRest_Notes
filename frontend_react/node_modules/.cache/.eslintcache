[{"C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\index.js":"1","C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\App.js":"2","C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\components\\Navb.js":"3","C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\components\\Notes.js":"4","C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\components\\Note.js":"5","C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\components\\NotePage.js":"6"},{"size":236,"mtime":1671033441681,"results":"7","hashOfConfig":"8"},{"size":594,"mtime":1672773881960,"results":"9","hashOfConfig":"8"},{"size":166,"mtime":1672673312567,"results":"10","hashOfConfig":"8"},{"size":1125,"mtime":1672942967714,"results":"11","hashOfConfig":"8"},{"size":300,"mtime":1673041915127,"results":"12","hashOfConfig":"8"},{"size":2188,"mtime":1673040307875,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"11bsnkx",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\index.js",[],[],[],"C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\App.js",["35"],[],"import { Route, Link, BrowserRouter as Router, Routes } from \"react-router-dom\";\n\n\nimport './App.css';\nimport Navb from './components/Navb';\nimport NotesListPage from './components/Notes';\nimport NotePage from './components/NotePage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container dark\">\n        <div className=\"app\">\n          <Navb />\n          <Routes>\n            <Route path=\"/\" element={<NotesListPage />} />\n            <Route path=\"/note/:id\" element={<NotePage />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\components\\Navb.js",[],[],"C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\components\\Notes.js",[],[],"C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\components\\Note.js",[],[],"C:\\Users\\Jergus\\Documents\\web\\django\\rest_notes\\frontend_react\\src\\components\\NotePage.js",["36","37","38"],[],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst NotePage = () => {\r\n    const { id } = useParams();\r\n    let history = useNavigate();\r\n    let [note, setNote] = useState(null)\r\n    let handleSubmit = () => {\r\n        if (id !== 'new' && note !== null) {\r\n            updateNote();\r\n        }\r\n\r\n\r\n    }\r\n    let handleAdding = () => {\r\n        if (note !== null) {\r\n            createNote()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getNote()\r\n    }, [id])\r\n\r\n    let getNote = async () => {\r\n        if (id !== 'new') {\r\n            let response = await fetch(`http://127.0.0.1:8000/api/notes/${id}/`)\r\n            let data = await response.json()\r\n\r\n            setNote(data)\r\n        }\r\n\r\n    }\r\n    let updateNote = async () => {\r\n\r\n        axios.put(`http://127.0.0.1:8000/api/notes/${id}/update/`, {\r\n            text: note.text,\r\n            name: note.name,\r\n\r\n        })\r\n    }\r\n    let createNote = async () => {\r\n\r\n        axios.post(`http://127.0.0.1:8000/api/notes/create/`, {\r\n\r\n            text: note.text,\r\n            name: note.name,\r\n\r\n        })\r\n    }\r\n    let deleteNote = async () => {\r\n\r\n        axios.delete(`http://127.0.0.1:8000/api/notes/${id}/delete/`)\r\n        history('/')\r\n\r\n    }\r\n    return (\r\n\r\n        <div className='note'>\r\n\r\n            <div className='note-header' onClick={(handleSubmit())}>\r\n                <h3> <Link to='/'><ArrowLeft /></Link >\r\n\r\n                </h3>\r\n                <input maxlength='23' placeholder=\"Name\" onChange={(e) => { { setNote({ ...note, 'name': e.target.value }) } }} defaultValue={note?.name}></input>\r\n                <Link to='/'>{id !== 'new' ? (<button onClick={deleteNote}>Delete</button>) : (<button onClick={handleAdding}>Add new</button>)}</Link >\r\n            </div>\r\n\r\n\r\n\r\n            <textarea maxlength='4990' onChange={(e) => { { setNote({ ...note, 'text': e.target.value }) } }} defaultValue={note?.text}></textarea>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default NotePage\r\n",{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":25,"column":8,"nodeType":"45","endLine":25,"endColumn":12,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":67,"column":77,"nodeType":"49","messageId":"50","endLine":67,"endColumn":125},{"ruleId":"47","severity":1,"message":"48","line":73,"column":59,"nodeType":"49","messageId":"50","endLine":73,"endColumn":107},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"desc":"52","fix":"53"},"Update the dependencies array to be: [getNote, id]",{"range":"54","text":"55"},[674,678],"[getNote, id]"]