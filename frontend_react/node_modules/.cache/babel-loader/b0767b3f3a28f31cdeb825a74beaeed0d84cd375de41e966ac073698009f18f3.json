{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jergus\\\\Documents\\\\web\\\\django\\\\rest_notes\\\\frontend_react\\\\src\\\\components\\\\NotePage.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    if (noteId === 'new') return;\n    let response = await fetch(`http://127.0.0.1:8000/api/notes/${noteId}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let createNote = async () => {\n    fetch(`/api/notes/`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let updateNote = async () => {\n    fetch(`/api/notes/${noteId}/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let deleteNote = async () => {\n    fetch(`/api/notes/${noteId}/`, {\n      method: 'DELETE',\n      'headers': {\n        'Content-Type': 'application/json'\n      }\n    });\n    history.push('/');\n  };\n  let handleSubmit = () => {\n    console.log('NOTE:', note);\n    if (noteId !== 'new' && note.body == '') {\n      deleteNote();\n    } else if (noteId !== 'new') {\n      updateNote();\n    } else if (noteId === 'new' && note.body !== null) {\n      createNote();\n    }\n    history.push('/');\n  };\n  let handleChange = value => {\n    setNote(note => ({\n      ...note,\n      'body': value\n    }));\n    console.log('Handle Change:', note);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), noteId !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        handleChange(e.target.value);\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(NotePage, \"k41NuHLtMLNqVoRGkWqAFGkbS8Y=\");\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["NotePage","match","history","noteId","params","id","note","setNote","useState","useEffect","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","push","handleSubmit","console","log","handleChange","value","e","target"],"sources":["C:/Users/Jergus/Documents/web/django/rest_notes/frontend_react/src/components/NotePage.js"],"sourcesContent":["\r\n\r\nconst NotePage = ({ match, history }) => {\r\n\r\n    let noteId = match.params.id\r\n    let [note, setNote] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getNote()\r\n    }, [noteId])\r\n\r\n\r\n    let getNote = async () => {\r\n        if (noteId === 'new') return\r\n\r\n        let response = await fetch(`http://127.0.0.1:8000/api/notes/${noteId}/`)\r\n        let data = await response.json()\r\n        setNote(data)\r\n    }\r\n\r\n    let createNote = async () => {\r\n        fetch(`/api/notes/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n    }\r\n\r\n\r\n    let updateNote = async () => {\r\n        fetch(`/api/notes/${noteId}/`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n    }\r\n\r\n\r\n    let deleteNote = async () => {\r\n        fetch(`/api/notes/${noteId}/`, {\r\n            method: 'DELETE',\r\n            'headers': {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        history.push('/')\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        console.log('NOTE:', note)\r\n        if (noteId !== 'new' && note.body == '') {\r\n            deleteNote()\r\n        } else if (noteId !== 'new') {\r\n            updateNote()\r\n        } else if (noteId === 'new' && note.body !== null) {\r\n            createNote()\r\n        }\r\n        history.push('/')\r\n    }\r\n\r\n    let handleChange = (value) => {\r\n        setNote(note => ({ ...note, 'body': value }))\r\n        console.log('Handle Change:', note)\r\n    }\r\n\r\n    return (\r\n        <div className=\"note\" >\r\n            <div className=\"note-header\">\r\n                <h3>\r\n                    <ArrowLeft onClick={handleSubmit} />\r\n                </h3>\r\n                {noteId !== 'new' ? (\r\n                    <button onClick={deleteNote}>Delete</button>\r\n                ) : (\r\n                    <button onClick={handleSubmit}>Done</button>\r\n                )}\r\n\r\n            </div>\r\n            <textarea onChange={(e) => { handleChange(e.target.value) }} value={note?.body}></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}